% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/encrypt_api_key.R
\name{encrypt_api_key}
\alias{encrypt_api_key}
\title{Encrypt api keys}
\usage{
encrypt_api_key(api_key, enc_name = "api_key.enc.rds",
  path_ssh = "path_ssh", file_rsa = "id_api",
  file_rsa_pub = "id_api.pub")
}
\arguments{
\item{api_key}{String with API key}

\item{enc_name}{String with a name of the file with encrypted key. Default name is 'api_key.enc.rds'}

\item{path_ssh}{String with path to the file with rsa keys. Same place will be used to store encrypted data}

\item{file_rsa}{String with a name of the file with a private key. Default name is 'id_api'}

\item{file_rsa_pub}{String with a name of the file with a public key. Default name is 'id_api.pub'}
}
\value{
Writes a file with encrypted key
}
\description{
Provide easy interfact to encrypt the api key.
}
\details{
Make sure to clean the history of the R session
}
\examples{

library(openssl)
library(tidyverse)
path_ssh <- normalizePath(tempdir(),winslash = "/")
rsa_keygen() \%>\% write_pem(path = file.path(path_ssh, 'id_api'))
# extract and write your public key
read_key(file = file.path(path_ssh, 'id_api', password = "")) \%>\% `[[`("pubkey") \%>\% write_pem(path = file.path(path_ssh, 'id_api.pub'))


path_private_key <- file.path(path_ssh, "id_api")
path_public_key <- file.path(path_ssh, "id_api.pub")

encrypt_api_key('my_key')


}
\references{
for more info on how to use RSA cryptography in R check my course
https://www.udemy.com/keep-your-secrets-under-control/?couponCode=CRYPTOGRAPHY-GIT
}
